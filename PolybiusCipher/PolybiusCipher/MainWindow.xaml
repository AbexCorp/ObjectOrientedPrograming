<Window x:Class="PolybiusCipher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PolybiusCipher"
        mc:Ignorable="d"
        
            FontSize="20"
        FontFamily="Consolas"
        Foreground="#eeeeee"
        
        Title="PolybiusCipher - Bartłomiej Fryczek" Height="576" Width="1024">


    <Window.Resources>

        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="#eeeeee"/>
            <Setter Property="Background" Value="#222024"/>
            <Setter Property="BorderBrush" Value="#bbbbbb"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>

        <Style TargetType="Button">
            <Setter Property="Foreground" Value="#eeeeee"/>
            <Setter Property="Background" Value="#222024"/>
            <Setter Property="BorderBrush" Value="#bbbbbb"/>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="#eeeeee"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>



        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#222024"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#6782b8"/>
        <SolidColorBrush x:Key="Button.MouseOver.Foreground" Color="#6490e8"/>

        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#1f1e21"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#6490e8"/>
        <SolidColorBrush x:Key="Button.Pressed.Foreground" Color="#6490e8"/>

        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <ControlTemplate x:Key="ButtonTemplate1" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.MouseOver.Foreground}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Pressed.Foreground}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </Window.Resources>


    <Grid Background="#222024">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="30"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>

            <RowDefinition Height="auto"></RowDefinition>

            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
        </Grid.RowDefinitions>





        <TextBox
            Grid.Row="1" Grid.Column="1" Margin="16" Padding="12" Grid.RowSpan="4"
            TextWrapping="Wrap"
            Text="Input"
            Name="Input">
            <TextBox.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="15"></Setter>
                </Style>
            </TextBox.Resources>
        </TextBox>

        <Button Template="{DynamicResource ButtonTemplate1}"
            Grid.Row="2" Grid.Column="2" Margin="16 10"
            Content="Cipher Text"
            Name="CipherButton" Click="CipherButton_Click">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="20"></Setter>
                </Style>
            </Button.Resources>
        </Button>
        
        <Button Template="{DynamicResource ButtonTemplate1}"
            Grid.Row="3" Grid.Column="2" Margin="16 10"
            Content="Decipher Text"
            Name="DecipherButton" Click="DecipherButton_Click">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="20"></Setter>
                </Style>
            </Button.Resources>
        </Button>

        <TextBox
            Grid.Row="1" Grid.Column="3" Margin="16" Padding="12" Grid.RowSpan="4"
            TextWrapping="Wrap"
            Text="Output"
            Name="Output">
            <TextBox.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="15"></Setter>
                </Style>
            </TextBox.Resources>
        </TextBox>





        <Rectangle
            Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="5" Margin="20px" Height="4px"
            Fill="#eeeeee"/>



        <TextBlock
            Grid.Row="6" Grid.Column="1" Padding="16" Margin="20 0 0 0"
            Text="Ciphering key"/>

        <Grid Grid.Row="7" Grid.Column="1" Grid.RowSpan="3" Margin="30 10 30 1">
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30px"></ColumnDefinition>
                <ColumnDefinition Width="30px"></ColumnDefinition>
                <ColumnDefinition Width="30px"></ColumnDefinition>
                <ColumnDefinition Width="30px"></ColumnDefinition>
                <ColumnDefinition Width="30px"></ColumnDefinition>
                <ColumnDefinition Width="30px"></ColumnDefinition>
                <ColumnDefinition Width="30px"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="30px"></RowDefinition>
                <RowDefinition Height="30px"></RowDefinition>
                <RowDefinition Height="30px"></RowDefinition>
                <RowDefinition Height="30px"></RowDefinition>
                <RowDefinition Height="30px"></RowDefinition>
            </Grid.RowDefinitions>

            <TextBox Grid.Row="0" Grid.Column="0" Name="Key00" MaxLength="1"/>
            <TextBox Grid.Row="0" Grid.Column="1" Name="Key01" MaxLength="1"/>
            <TextBox Grid.Row="0" Grid.Column="2" Name="Key02" MaxLength="1"/>
            <TextBox Grid.Row="0" Grid.Column="3" Name="Key03" MaxLength="1"/>
            <TextBox Grid.Row="0" Grid.Column="4" Name="Key04" MaxLength="1"/>
            <TextBox Grid.Row="0" Grid.Column="5" Name="Key05" MaxLength="1"/>
            <TextBox Grid.Row="0" Grid.Column="6" Name="Key06" MaxLength="1"/>

            <TextBox Grid.Row="1" Grid.Column="0" Name="Key10" MaxLength="1"/>
            <TextBox Grid.Row="1" Grid.Column="1" Name="Key11" MaxLength="1"/>
            <TextBox Grid.Row="1" Grid.Column="2" Name="Key12" MaxLength="1"/>
            <TextBox Grid.Row="1" Grid.Column="3" Name="Key13" MaxLength="1"/>
            <TextBox Grid.Row="1" Grid.Column="4" Name="Key14" MaxLength="1"/>
            <TextBox Grid.Row="1" Grid.Column="5" Name="Key15" MaxLength="1"/>
            <TextBox Grid.Row="1" Grid.Column="6" Name="Key16" MaxLength="1"/>

            <TextBox Grid.Row="2" Grid.Column="0" Name="Key20" MaxLength="1"/>
            <TextBox Grid.Row="2" Grid.Column="1" Name="Key21" MaxLength="1"/>
            <TextBox Grid.Row="2" Grid.Column="2" Name="Key22" MaxLength="1"/>
            <TextBox Grid.Row="2" Grid.Column="3" Name="Key23" MaxLength="1"/>
            <TextBox Grid.Row="2" Grid.Column="4" Name="Key24" MaxLength="1"/>
            <TextBox Grid.Row="2" Grid.Column="5" Name="Key25" MaxLength="1"/>
            <TextBox Grid.Row="2" Grid.Column="6" Name="Key26" MaxLength="1"/>

            <TextBox Grid.Row="3" Grid.Column="0" Name="Key30" MaxLength="1"/>
            <TextBox Grid.Row="3" Grid.Column="1" Name="Key31" MaxLength="1"/>
            <TextBox Grid.Row="3" Grid.Column="2" Name="Key32" MaxLength="1"/>
            <TextBox Grid.Row="3" Grid.Column="3" Name="Key33" MaxLength="1"/>
            <TextBox Grid.Row="3" Grid.Column="4" Name="Key34" MaxLength="1"/>
            <TextBox Grid.Row="3" Grid.Column="5" Name="Key35" MaxLength="1"/>
            <TextBox Grid.Row="3" Grid.Column="6" Name="Key36" MaxLength="1"/>

            <TextBox Grid.Row="4" Grid.Column="0" Name="Key40" MaxLength="1"/>
            <TextBox Grid.Row="4" Grid.Column="1" Name="Key41" MaxLength="1"/>
            <TextBox Grid.Row="4" Grid.Column="2" Name="Key42" MaxLength="1"/>
            <TextBox Grid.Row="4" Grid.Column="3" Name="Key43" MaxLength="1"/>
            <TextBox Grid.Row="4" Grid.Column="4" Name="Key44" MaxLength="1"/>
            <TextBox Grid.Row="4" Grid.Column="5" Name="Key45" MaxLength="1"/>
            <TextBox Grid.Row="4" Grid.Column="6" Name="Key46" MaxLength="1"/>
            
        </Grid>

        <Button Template="{DynamicResource ButtonTemplate1}"
            Grid.Row="7" Grid.Column="2" Margin="16 10"
            Content="Set Ciphering Key"
            Name="SetKeyButton"
            Click="SetKeyButton_Click">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="20"></Setter>
                </Style>
            </Button.Resources>
        </Button>

        <TextBlock
            Grid.Row="6" Grid.Column="3" Padding="16" Margin="20 20 0 0"
            Text="How it works:"/>

        <TextBlock
            Grid.Row="7" Grid.Column="3" Grid.RowSpan="3" Padding="16" Margin="20 0 0 0"
            TextWrapping="Wrap">
            Program first encrypts each letter according to the table. Second step is to switch the numbers
            if column number + row number is even. If no key is found, a default table is generated.
        </TextBlock>

    </Grid>

</Window>
